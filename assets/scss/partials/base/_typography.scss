// _typography.scss

p {
	@include font-default ($type-scale, "epsilon");
}

@each $level, $scale in $type-scale {
	@if map-has-key($scale, heading-level) {
		h#{map-get($scale, heading-level)},
		.heading-#{$level} {
	    	font-family: map-get($scale, font);
	        @include font(map-get($scale, size), map-get($scale, line-height));
	        font-weight: map-get($scale, weight);
	        color: map-get($scale, color);
	    }
	}
	@else {
	    .heading-#{$level} {
	    	test: map-get(map-get($type-scale, $level), $scale);
	    	font-family: map-get($scale, font);
	        @include font(map-get($scale, size), map-get($scale, line-height));
	        font-weight: map-get($scale, weight);
	        color: map-get($scale, color);
	    }
	}
}

@include respond-to(lg) {
	p {
		@include font-default ($type-scale--lg, "epsilon");
	}

	@each $level, $scale in $type-scale--lg {
		@if map-has-key($scale, heading-level) {
			h#{map-get($scale, heading-level)},
			.heading-#{$level} {
		    	font-family: map-get($scale, font);
		        @include font(map-get($scale, size), map-get($scale, line-height));
		        font-weight: map-get($scale, weight);
		        color: map-get($scale, color);
		    }
		}
		@else {
		    .heading-#{$level} {
		    	test: map-get(map-get($type-scale, $level), $scale);
		    	font-family: map-get($scale, font);
		        @include font(map-get($scale, size), map-get($scale, line-height));
		        font-weight: map-get($scale, weight);
		        color: map-get($scale, color);
		    }
		}
	}
}